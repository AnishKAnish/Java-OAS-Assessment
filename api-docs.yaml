openapi: 3.0.1
info:
  title: Employee API
  description: Microservice for employee
  version: "2.0"
servers:
- url: http://localhost:9190
  description: Generated server url
paths:
  /addEmployee:
    post:
      tags:
      - employee-controller
      operationId: addEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
  /employees:
    get:
      tags:
      - employee-controller
      operationId: findAllEmployees
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
  /delete/{id}:
    delete:
      tags:
      - employee-controller
      operationId: deleteEmployee
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /addAllEmployees:
    post:
      tags:
      - employee-controller
      operationId: addEmployees
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Employee'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
  /employeeById/{id}:
    get:
      tags:
      - employee-controller
      operationId: findEmployeeById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
  /update:
    put:
      tags:
      - employee-controller
      operationId: updateEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
  /employee/{name}:
    get:
      tags:
      - employee-controller
      operationId: findEmployeeByName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
components:
  schemas:
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        address:
          type: string
        salary:
          type: number
          format: double
